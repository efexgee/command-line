UNIX file permissions
    user:group:other
    read write execute
        files vs. directories
    symbolic vs. octal
    umask
        -S
manipulating the file system
    rm
        -r
        -f
        -v
        -i
    mkdir
    rmdir
        "safe"
    touch
    chmod
        octal vs. symbolic
        -R
    chown
        user:group
        -R
    cp
        -p
        -r
    mv
        -v
getting around
    tab completion
        speed
        avoid typos
        handle weird filenames
    cd
        cd ..
        cd -
        ~
        ~<user>
        cd
    pwd
    ls
        . and ..
        -l
        -A
        -rt
        -h
            pros and cons
        -R
        -s
        --color
        -1
    tree -dx -L 3 --noreport
    which
repeating yourself
    ctrl-r
    history
    !<N>
    !!
    !?
    !$
aliases
    as shortcuts
        tstamp = 'date +"%D %T"'
        fill = 'cut -c1-`tput cols`'
        tail1 = 'tail -q -n 1`
        nf = 'awk "{print $NF}"'
        py3 = 'source activate py3'
        deconda = 'source deactivate'
    as defaults
        ls -lArt --color=auto
        grep --color=auto -d skip
        df -hPT
        tree -dx --noreport
        du -B 1G (overridable)
        hostname -s
        watch -n 60
getting help
    --help
    man
    help
    e.g. ls, alias, umask (man sections)
the network
    ssh
        ssh <host>
        ssh <user>@<host>
        ssh <host> <command>
        -q
        -v -vv -vvv
    scp
        -p
        -r
    wget
    ping
    host
process control
    ^Z
    fg
    bg
    jobs
        -l
    %1
    &
ubiquitous flags
    --help
    -v
    --version
looking at text
    cat
    more or less
    head
    tail
        -f
    wc
        -l
        -L
    grep
        -f
        -i
        -w
        -v
        -m
        -n
        -h
        -o
        -r
        -l
        -L
        -c
        -A
        -B
        --color=
    awk
        print $1
        print $NF
        -F','
    sed
        s/match/replace/g
        s/match//g
        s#match#replace#g
    tac
    diff
        -y
        --suppress-common-lines
    colordiff?
batch processing
    variables
        $var
        echo $var
    for
    $()
        `` (don't use)
    while
        true
    sleep
    ${var:match:replace}
    (())
    if
        [[ ]]
        fi
        else
    && and || (don't use)
    xargs
        example
verbosity
    rm -v
    chmod -c
    chown -c
your environment:
    .bashrc
    .bash_profile
    PATH
        adding
        .
        ::
    source
        .
    environment variables
        HOME
        USER
    env
    prompt
        PS1
the world around you
    id 
    lscpu
    uptime
    uname -a
    cat /etc/redhat-release
    cat /etc/debian_version
    who
    finger
    df
        -hPT
    du
        -h
        -B 1G
        -d 1
        -t 10m
        -s
    htop
    dstat
    time
    watch
        -n
for programming:
    running a script
        bash <file>
        chmod +x
        ./<file>
    basename
    dirname
    hostname -s
    mkdir -p
    mkdir -m <mode>
    rmdir -p
    date
    expand_aliases
    functions
        local
further reading:
    md5sum
    /usr/bin/time
    sort
    uniq
tools which deserve their own thing:
    git
    conda
out of scope:
    rsync
    find
    screen
    getent
    host
    pushd / popd 
    ln
        -s
        order of args
